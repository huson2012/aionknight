/**   
 * Эмулятор игрового сервера Aion 2.7 от команды разработчиков 'Aion-Knight Dev. Team' является 
 * свободным программным обеспечением; вы можете распространять и/или изменять его согласно условиям 
 * Стандартной Общественной Лицензии GNU (GNU GPL), опубликованной Фондом свободного программного 
 * обеспечения (FSF), либо Лицензии версии 3, либо (на ваше усмотрение) любой более поздней 
 * версии.
 * 
 * Программа распространяется в надежде, что она будет полезной, но БЕЗ КАКИХ БЫ ТО НИ БЫЛО 
 * ГАРАНТИЙНЫХ ОБЯЗАТЕЛЬСТВ; даже без косвенных  гарантийных  обязательств, связанных с 
 * ПОТРЕБИТЕЛЬСКИМИ СВОЙСТВАМИ и ПРИГОДНОСТЬЮ ДЛЯ ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Для подробностей смотрите 
 * Стандартную Общественную Лицензию GNU.
 * 
 * Вы должны были получить копию Стандартной Общественной Лицензии GNU вместе с этой программой. 
 * Если это не так, напишите в Фонд Свободного ПО (Free Software Foundation, Inc., 675 Mass Ave, 
 * Cambridge, MA 02139, USA
 * 
 * Веб-cайт разработчиков : http://aion-knight.ru
 * Поддержка клиента игры : Aion 2.7 - 'Арена Смерти' (Иннова) 
 * Версия серверной части : Aion-Knight 2.7 (Beta version)
 */

package gameserver.ai.desires;

import java.util.Iterator;

/**
 * This class is designed to be a helper class for desires.
 * Direct access to desire list is not allowed, however this interface can be used for iteration.
 *
 * @see gameserver.ai.desires.DesireIteratorFilter
 * @see gameserver.ai.desires.DesireQueue#iterateDesires(DesireIteratorHandler, DesireIteratorFilter[])
 */
public interface DesireIteratorHandler
{
	/**
	 * This method is called each time for every desire that is in the queue.<br>
	 * Remove of desire must be handeled by <b>iterator.remove();</b><br>
	 * <br> {@link java.util.ConcurrentModificationException} will be thrown by
	 * {@link gameserver.ai.desires.DesireQueue#iterateDesires(DesireIteratorHandler, DesireIteratorFilter[])}
	 * if any of the following methods will be called from here:
	 * <ul>
	 * <li>{@link gameserver.ai.desires.DesireQueue#addDesire(Desire)}</li>
	 * <li>{@link gameserver.ai.desires.DesireQueue#poll()}</li>
	 * <li>{@link gameserver.ai.desires.DesireQueue#removeDesire(Desire)}</li>
	 * </ul>
	 * <p/>
	 * However {@link gameserver.ai.desires.DesireQueue#clear()} can be called.
	 * 
	 * @param desire
	 *           current element of iteration
	 * @param iterator
	 *           iterator object
	 */
	public void next(Desire desire, Iterator<Desire> iterator);
}
